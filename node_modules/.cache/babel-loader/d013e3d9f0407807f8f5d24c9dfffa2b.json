{"ast":null,"code":"var _jsxFileName = \"/home/poncho/toto/CODE/react-shopping-cart/src/components/Cart/Cart.tsx\",\n    _s = $RefreshSig$();\n\nimport formatPrice from 'utils/formatPrice';\nimport CartProducts from './CartProducts';\nimport { useCart } from 'contexts/cart-context';\nimport * as S from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = () => {\n  _s();\n\n  const {\n    products,\n    total,\n    isOpen,\n    openCart,\n    closeCart\n  } = useCart();\n\n  const handleCheckout = () => {\n    if (total.productQuantity) {\n      alert(`Checkout - Subtotal: ${total.currencyFormat} ${formatPrice(total.totalPrice, total.currencyId)}`);\n    } else {\n      alert('Add some product in the cart!');\n    }\n  };\n\n  const handleToggleCart = isOpen => () => isOpen ? closeCart() : openCart();\n\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    isOpen: isOpen,\n    children: [/*#__PURE__*/_jsxDEV(S.CartButton, {\n      onClick: handleToggleCart(isOpen),\n      children: isOpen ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(S.CartIcon, {\n        children: /*#__PURE__*/_jsxDEV(S.CartQuantity, {\n          title: \"Products in cart quantity\",\n          children: total.productQuantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(S.CartContent, {\n      children: [/*#__PURE__*/_jsxDEV(S.CartContentHeader, {\n        children: [/*#__PURE__*/_jsxDEV(S.CartIcon, {\n          large: true,\n          children: /*#__PURE__*/_jsxDEV(S.CartQuantity, {\n            children: total.productQuantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(S.HeaderTitle, {\n          children: \"Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CartProducts, {\n        products: products\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(S.CartFooter, {\n        children: [/*#__PURE__*/_jsxDEV(S.Sub, {\n          children: \"SUBTOTAL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(S.SubPrice, {\n          children: [/*#__PURE__*/_jsxDEV(S.SubPriceValue, {\n            children: `${total.currencyFormat} ${formatPrice(total.totalPrice, total.currencyId)}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(S.SubPriceInstallment, {\n            children: total.installments ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: `OR UP TO ${total.installments} x ${total.currencyFormat} ${formatPrice(total.totalPrice / total.installments, total.currencyId)}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(S.CheckoutButton, {\n          onClick: handleCheckout,\n          autoFocus: true,\n          children: \"Checkout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"iT4CMgbsH5x5FYMvxfkUdLQS5CQ=\", false, function () {\n  return [useCart];\n});\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/home/poncho/toto/CODE/react-shopping-cart/src/components/Cart/Cart.tsx"],"names":["formatPrice","CartProducts","useCart","S","Cart","products","total","isOpen","openCart","closeCart","handleCheckout","productQuantity","alert","currencyFormat","totalPrice","currencyId","handleToggleCart","installments"],"mappings":"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","sourcesContent":["import formatPrice from 'utils/formatPrice';\nimport CartProducts from './CartProducts';\n\nimport { useCart } from 'contexts/cart-context';\n\nimport * as S from './style';\n\nconst Cart = () => {\n  const { products, total, isOpen, openCart, closeCart } = useCart();\n\n  const handleCheckout = () => {\n    if (total.productQuantity) {\n      alert(\n        `Checkout - Subtotal: ${total.currencyFormat} ${formatPrice(\n          total.totalPrice,\n          total.currencyId\n        )}`\n      );\n    } else {\n      alert('Add some product in the cart!');\n    }\n  };\n\n  const handleToggleCart = (isOpen: boolean) => () =>\n    isOpen ? closeCart() : openCart();\n\n  return (\n    <S.Container isOpen={isOpen}>\n      <S.CartButton onClick={handleToggleCart(isOpen)}>\n        {isOpen ? (\n          <span>X</span>\n        ) : (\n          <S.CartIcon>\n            <S.CartQuantity title=\"Products in cart quantity\">\n              {total.productQuantity}\n            </S.CartQuantity>\n          </S.CartIcon>\n        )}\n      </S.CartButton>\n\n      {isOpen && (\n        <S.CartContent>\n          <S.CartContentHeader>\n            <S.CartIcon large>\n              <S.CartQuantity>{total.productQuantity}</S.CartQuantity>\n            </S.CartIcon>\n            <S.HeaderTitle>Cart</S.HeaderTitle>\n          </S.CartContentHeader>\n\n          <CartProducts products={products} />\n\n          <S.CartFooter>\n            <S.Sub>SUBTOTAL</S.Sub>\n            <S.SubPrice>\n              <S.SubPriceValue>{`${total.currencyFormat} ${formatPrice(\n                total.totalPrice,\n                total.currencyId\n              )}`}</S.SubPriceValue>\n              <S.SubPriceInstallment>\n                {total.installments ? (\n                  <span>\n                    {`OR UP TO ${total.installments} x ${\n                      total.currencyFormat\n                    } ${formatPrice(\n                      total.totalPrice / total.installments,\n                      total.currencyId\n                    )}`}\n                  </span>\n                ) : null}\n              </S.SubPriceInstallment>\n            </S.SubPrice>\n            <S.CheckoutButton onClick={handleCheckout} autoFocus>\n              Checkout\n            </S.CheckoutButton>\n          </S.CartFooter>\n        </S.CartContent>\n      )}\n    </S.Container>\n  );\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}