{"ast":null,"code":"var _jsxFileName = \"/home/poncho/toto/CODE/react-shopping-cart/src/components/Filter/Filter.tsx\",\n    _s = $RefreshSig$();\n\nimport { useProducts } from 'contexts/products-context';\nimport * as S from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const availableSizes = ['XS', 'S', 'M', 'ML', 'L', 'XL', 'XXL'];\n\nconst Filter = () => {\n  _s();\n\n  const {\n    filters,\n    filterProducts\n  } = useProducts();\n  const selectedCheckboxes = new Set(filters);\n\n  const toggleCheckbox = label => {\n    if (selectedCheckboxes.has(label)) {\n      selectedCheckboxes.delete(label);\n    } else {\n      selectedCheckboxes.add(label);\n    }\n\n    const filters = Array.from(selectedCheckboxes);\n    filterProducts(filters);\n  };\n\n  const createCheckbox = label => /*#__PURE__*/_jsxDEV(S.Checkbox, {\n    label: label,\n    handleOnChange: toggleCheckbox\n  }, label, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n\n  const createCheckboxes = () => availableSizes.map(createCheckbox);\n\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: [/*#__PURE__*/_jsxDEV(S.Title, {\n      children: \"Sizes:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), createCheckboxes()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Filter, \"js7mnImdKstN/rlKQOcLr0mmzMQ=\", false, function () {\n  return [useProducts];\n});\n\n_c = Filter;\nexport default Filter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["/home/poncho/toto/CODE/react-shopping-cart/src/components/Filter/Filter.tsx"],"names":["useProducts","S","availableSizes","Filter","filters","filterProducts","selectedCheckboxes","Set","toggleCheckbox","label","has","delete","add","Array","from","createCheckbox","createCheckboxes","map"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,2BAA5B;AAEA,OAAO,KAAKC,CAAZ,MAAmB,SAAnB;;AAEA,OAAO,MAAMC,cAAc,GAAG,CAAC,IAAD,EAAO,GAAP,EAAY,GAAZ,EAAiB,IAAjB,EAAuB,GAAvB,EAA4B,IAA5B,EAAkC,KAAlC,CAAvB;;AAEP,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA8BL,WAAW,EAA/C;AAEA,QAAMM,kBAAkB,GAAG,IAAIC,GAAJ,CAAQH,OAAR,CAA3B;;AAEA,QAAMI,cAAc,GAAIC,KAAD,IAAmB;AACxC,QAAIH,kBAAkB,CAACI,GAAnB,CAAuBD,KAAvB,CAAJ,EAAmC;AACjCH,MAAAA,kBAAkB,CAACK,MAAnB,CAA0BF,KAA1B;AACD,KAFD,MAEO;AACLH,MAAAA,kBAAkB,CAACM,GAAnB,CAAuBH,KAAvB;AACD;;AAED,UAAML,OAAO,GAAGS,KAAK,CAACC,IAAN,CAAWR,kBAAX,CAAhB;AAEAD,IAAAA,cAAc,CAACD,OAAD,CAAd;AACD,GAVD;;AAYA,QAAMW,cAAc,GAAIN,KAAD,iBACrB,QAAC,CAAD,CAAG,QAAH;AAAY,IAAA,KAAK,EAAEA,KAAnB;AAA0B,IAAA,cAAc,EAAED;AAA1C,KAA+DC,KAA/D;AAAA;AAAA;AAAA;AAAA,UADF;;AAIA,QAAMO,gBAAgB,GAAG,MAAMd,cAAc,CAACe,GAAf,CAAmBF,cAAnB,CAA/B;;AAEA,sBACE,QAAC,CAAD,CAAG,SAAH;AAAA,4BACE,QAAC,CAAD,CAAG,KAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,gBAAgB,EAFnB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA7BD;;GAAMb,M;UACgCH,W;;;KADhCG,M;AA+BN,eAAeA,MAAf","sourcesContent":["import { useProducts } from 'contexts/products-context';\n\nimport * as S from './style';\n\nexport const availableSizes = ['XS', 'S', 'M', 'ML', 'L', 'XL', 'XXL'];\n\nconst Filter = () => {\n  const { filters, filterProducts } = useProducts();\n\n  const selectedCheckboxes = new Set(filters);\n\n  const toggleCheckbox = (label: string) => {\n    if (selectedCheckboxes.has(label)) {\n      selectedCheckboxes.delete(label);\n    } else {\n      selectedCheckboxes.add(label);\n    }\n\n    const filters = Array.from(selectedCheckboxes) as [];\n\n    filterProducts(filters);\n  };\n\n  const createCheckbox = (label: string) => (\n    <S.Checkbox label={label} handleOnChange={toggleCheckbox} key={label} />\n  );\n\n  const createCheckboxes = () => availableSizes.map(createCheckbox);\n\n  return (\n    <S.Container>\n      <S.Title>Sizes:</S.Title>\n      {createCheckboxes()}\n    </S.Container>\n  );\n};\n\nexport default Filter;\n"]},"metadata":{},"sourceType":"module"}