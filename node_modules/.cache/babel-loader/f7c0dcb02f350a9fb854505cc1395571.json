{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback } from 'react';\nimport { useProductsContext } from './ProductsContextProvider';\nimport { getProducts } from 'services/products';\n\nconst useProducts = () => {\n  _s();\n\n  const {\n    isFetching,\n    setIsFetching,\n    products,\n    setProducts,\n    filters,\n    setFilters\n  } = useProductsContext();\n  const fetchProducts = useCallback(() => {\n    setIsFetching(true);\n    getProducts().then(products => {\n      setIsFetching(false);\n      setProducts(products);\n    });\n  }, [setIsFetching, setProducts]);\n\n  const filterProducts = filters => {\n    setIsFetching(true);\n    getProducts().then(products => {\n      setIsFetching(false);\n      let filteredProducts;\n\n      if (filters && filters.length > 0) {\n        filteredProducts = products.filter(p => filters.find(filter => p.availableSizes.find(size => size === filter)));\n      } else {\n        filteredProducts = products;\n      }\n\n      setFilters(filters);\n      setProducts(filteredProducts);\n    });\n  };\n\n  return {\n    isFetching,\n    fetchProducts,\n    products,\n    filterProducts,\n    filters\n  };\n};\n\n_s(useProducts, \"IVhCxuWDYUWxqIivXBfUNu6p5S0=\", false, function () {\n  return [useProductsContext];\n});\n\nexport default useProducts;","map":{"version":3,"sources":["/home/poncho/toto/CODE/react-shopping-cart/src/contexts/products-context/useProducts.tsx"],"names":["useCallback","useProductsContext","getProducts","useProducts","isFetching","setIsFetching","products","setProducts","filters","setFilters","fetchProducts","then","filterProducts","filteredProducts","length","filter","p","find","availableSizes","size"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,SAASC,kBAAT,QAAmC,2BAAnC;AAEA,SAASC,WAAT,QAA4B,mBAA5B;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM;AACJC,IAAAA,UADI;AAEJC,IAAAA,aAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,WAJI;AAKJC,IAAAA,OALI;AAMJC,IAAAA;AANI,MAOFR,kBAAkB,EAPtB;AASA,QAAMS,aAAa,GAAGV,WAAW,CAAC,MAAM;AACtCK,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAH,IAAAA,WAAW,GAAGS,IAAd,CAAoBL,QAAD,IAA0B;AAC3CD,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,MAAAA,WAAW,CAACD,QAAD,CAAX;AACD,KAHD;AAID,GANgC,EAM9B,CAACD,aAAD,EAAgBE,WAAhB,CAN8B,CAAjC;;AAQA,QAAMK,cAAc,GAAIJ,OAAD,IAAuB;AAC5CH,IAAAA,aAAa,CAAC,IAAD,CAAb;AAEAH,IAAAA,WAAW,GAAGS,IAAd,CAAoBL,QAAD,IAA0B;AAC3CD,MAAAA,aAAa,CAAC,KAAD,CAAb;AACA,UAAIQ,gBAAJ;;AAEA,UAAIL,OAAO,IAAIA,OAAO,CAACM,MAAR,GAAiB,CAAhC,EAAmC;AACjCD,QAAAA,gBAAgB,GAAGP,QAAQ,CAACS,MAAT,CAAiBC,CAAD,IACjCR,OAAO,CAACS,IAAR,CAAcF,MAAD,IACXC,CAAC,CAACE,cAAF,CAAiBD,IAAjB,CAAuBE,IAAD,IAAkBA,IAAI,KAAKJ,MAAjD,CADF,CADiB,CAAnB;AAKD,OAND,MAMO;AACLF,QAAAA,gBAAgB,GAAGP,QAAnB;AACD;;AAEDG,MAAAA,UAAU,CAACD,OAAD,CAAV;AACAD,MAAAA,WAAW,CAACM,gBAAD,CAAX;AACD,KAhBD;AAiBD,GApBD;;AAsBA,SAAO;AACLT,IAAAA,UADK;AAELM,IAAAA,aAFK;AAGLJ,IAAAA,QAHK;AAILM,IAAAA,cAJK;AAKLJ,IAAAA;AALK,GAAP;AAOD,CA/CD;;GAAML,W;UAQAF,kB;;;AAyCN,eAAeE,WAAf","sourcesContent":["import { useCallback } from 'react';\n\nimport { useProductsContext } from './ProductsContextProvider';\nimport { IProduct } from 'models';\nimport { getProducts } from 'services/products';\n\nconst useProducts = () => {\n  const {\n    isFetching,\n    setIsFetching,\n    products,\n    setProducts,\n    filters,\n    setFilters,\n  } = useProductsContext();\n\n  const fetchProducts = useCallback(() => {\n    setIsFetching(true);\n    getProducts().then((products: IProduct[]) => {\n      setIsFetching(false);\n      setProducts(products);\n    });\n  }, [setIsFetching, setProducts]);\n\n  const filterProducts = (filters: string[]) => {\n    setIsFetching(true);\n\n    getProducts().then((products: IProduct[]) => {\n      setIsFetching(false);\n      let filteredProducts;\n\n      if (filters && filters.length > 0) {\n        filteredProducts = products.filter((p: IProduct) =>\n          filters.find((filter: string) =>\n            p.availableSizes.find((size: string) => size === filter)\n          )\n        );\n      } else {\n        filteredProducts = products;\n      }\n\n      setFilters(filters);\n      setProducts(filteredProducts);\n    });\n  };\n\n  return {\n    isFetching,\n    fetchProducts,\n    products,\n    filterProducts,\n    filters,\n  };\n};\n\nexport default useProducts;\n"]},"metadata":{},"sourceType":"module"}